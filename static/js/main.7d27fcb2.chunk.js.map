{"version":3,"sources":["components/Card.js","components/TaskAdd.js","components/Status.js","components/StatusAdd.js","models/task.js","Pages/Home.js","Pages/Edit.js","App.js","reportWebVitals.js","models/status.js","reducers/status.js","reducers/tasks.js","reducers/index.js","index.js"],"names":["styles","container","display","flexDirection","borderRadius","width","padding","alignItems","justifyContent","borderWidth","borderColor","borderStyle","marginTop","marginBottom","text","fontWeight","fontSize","textAlign","textJustify","color","button","Card","props","name","dispatch","useDispatch","variant","style","DeleteOutlined","onClick","type","payload","id","size","TaskAdd","Modal","aria-labelledby","centered","show","onHide","close","Header","closeButton","Title","InputGroup","Form","Group","Control","autoFocus","value","onChange","e","setName","target","placeholder","Footer","Button","elevation","margin","header","buttonContainer","status","no","marginLeft","Status","tasks","useSelector","state","useState","showModal","setShowModal","taskName","setTaskName","none","toast","info","backgroundColor","length","EllipsisOutlined","PlusOutlined","map","item","index","tasksName","console","log","uuidv4","undefined","Window","localStorage","setItem","StatusAdd","setColor","Task","this","Home","statusName","setStatusName","labelColor","setLabelColor","JSON","stringify","Edit","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","taskId","rootReducer","combineReducers","action","addedStatus","updatedStatus","concat","addedTask","updatedTasks","findIndex","obj","updatedTasks2","filter","i","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d27fcb2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {DeleteOutlined} from '@ant-design/icons'\r\n\r\nconst Card = (props) => {\r\n\r\n    const {name} = props;\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteTask = () => {\r\n        dispatch({\r\n            type : \"DELETE_TASK\",\r\n            payload : {\r\n                id : props.id\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return <div variant={'outline-light'}  style={styles.container}>\r\n        <span style={styles.text}>{name}</span>\r\n        <span style={styles.button}>\r\n            <DeleteOutlined onClick={deleteTask} size={22} style={{color : 'grey'}}/>\r\n        </span>\r\n    </div>\r\n}\r\n\r\nconst styles = {\r\n    container : {\r\n        display : 'flex',\r\n        flexDirection : 'row',\r\n        borderRadius : 10,\r\n        width : 300,\r\n        padding : 3,\r\n        alignItems : 'center',\r\n        justifyContent : 'space-between',\r\n        //backgroundColor : 'white',\r\n        borderWidth : 1.5,\r\n        borderColor : 'grey',\r\n        borderStyle : 'solid',\r\n        marginTop : 5,\r\n        marginBottom : 5,\r\n    },\r\n    text : {\r\n        fontWeight : 'bold',\r\n        fontSize : 18,\r\n        textAlign : 'center',\r\n        textJustify : 'center',\r\n        padding : 5,\r\n        color : '#484E56',\r\n    },\r\n    button : {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding : 5,\r\n        marginBottom: 3,\r\n    }\r\n}\r\n\r\nexport default Card\r\n\r\n","import React from \"react\";\r\nimport {Modal, Button, InputGroup, Form} from \"react-bootstrap\";\r\n\r\n\r\nconst TaskAdd = (props) => {\r\n\r\n\r\n    return(\r\n        <>\r\n        <Modal size=\"sm\"\r\n               aria-labelledby=\"contained-modal-title-vcenter\"\r\n               centered\r\n               show={props.show}\r\n               onHide={props.close}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add a task</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <InputGroup style={{justifyContent : 'center', alignItems : 'center'}}>\r\n                <Form style={{marginTop : 16}}>\r\n                <Form.Group>\r\n                    <Form.Control autoFocus value={props.name} onChange={(e) => props.setName(e.target.value)} type=\"text\" placeholder=\"Task Name\" />\r\n                </Form.Group>\r\n                </Form>\r\n            </InputGroup>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={props.close}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={props.close}>\r\n                    Add\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskAdd","import React, { useState} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {PlusOutlined, EllipsisOutlined} from '@ant-design/icons'\r\nimport Card from \"./Card\";\r\nimport {Button} from \"antd\";\r\nimport TaskAdd from \"./TaskAdd\";\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst Status = (props) => {\r\n\r\n    const {tasks} = useSelector((state) => ({...state}))\r\n    const dispatch = useDispatch();\r\n    let noOfTasks = 0;\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [taskName, setTaskName] = useState('')\r\n\r\n\r\n    const handleClose = () => {\r\n        if(taskName) {\r\n            //noOfTasks = noOfTasks+1;\r\n            dispatch({\r\n                type : \"ADD_TASK\",\r\n                payload : {\r\n                    taskName,\r\n                    status : props.status,\r\n                    id : uuidv4(),\r\n                }\r\n            })\r\n            setTaskName('');\r\n            setShowModal( false);\r\n            if(typeof Window !== undefined) {\r\n                //work to do\r\n                localStorage.setItem('tasks', tasks)\r\n            }\r\n        }\r\n        else {\r\n            setTaskName('')\r\n            setShowModal( false);\r\n            toast.info('Uh oh! Task not added')\r\n        }\r\n    }\r\n\r\n    const addTask = () => {\r\n        setShowModal(true)\r\n        setShowModal((state) => {\r\n            console.log(state)\r\n            return state;\r\n        })\r\n    }\r\n\r\n    const none = () => {\r\n        toast.info('Feature to be added soon!')\r\n    }\r\n\r\n    return <div style={styles.container}>\r\n        <div style={styles.header}>\r\n            {/*{console.log(\"PROPS\", props.color, props.status)}*/}\r\n            <div>\r\n            <span style={{...styles.status, backgroundColor : props.color}}> {props.status}</span>\r\n            <span style={styles.no}>{tasks.tasks.length - 1}</span>\r\n            </div>\r\n            <div style={styles.buttonContainer}>\r\n                <Button onClick={none} type={\"text\"}><EllipsisOutlined style={{color: 'grey'}}/></Button>\r\n                <Button onClick={none} type={\"text\"}><PlusOutlined style={{color: 'grey'}}/></Button>\r\n            </div>\r\n\r\n        </div>\r\n        <div>\r\n            {tasks && tasks.tasks.map((item, index) => {\r\n                if (item.tasksName === '') return <div></div>;\r\n                else if (item.status !== props.status) return <div> </div>;\r\n                else return <Card name={item.name} id={item.id}/>\r\n            })}\r\n        </div>\r\n\r\n        <Button onClick={addTask} type={\"text\"} style={{alignItems : 'center', justifyContent :'center'}}>\r\n            <span style={{color : 'grey', marginLeft : -11, fontWeight : 'bold'}}>Add Task</span>\r\n        </Button>\r\n\r\n        {showModal && <TaskAdd show={showModal} close={handleClose} name={taskName} setName={setTaskName}/>}\r\n\r\n    </div>\r\n}\r\n\r\nconst styles = {\r\n    container : {\r\n        width : 300,\r\n        elevation : 10,\r\n        margin: 20,\r\n\r\n    },\r\n    header : {\r\n        width: 300,\r\n        display: 'flex',\r\n        flexDirection : 'row',\r\n        alignItems : 'center',\r\n        justifyContent :'space-between',\r\n    },\r\n    buttonContainer : {\r\n        display : 'inline-block',\r\n        marginTop : 10,\r\n    },\r\n    status : {\r\n        borderRadius : 10,\r\n        padding : 5,\r\n        textAlign : 'center',\r\n        fontWeight : 'bold',\r\n        fontSize : 13,\r\n    },\r\n    no : {\r\n        marginLeft : 15,\r\n        color : 'grey',\r\n        fontSize: 20,\r\n    }\r\n}\r\n\r\nexport default Status","import React from \"react\";\r\nimport {Modal, Button, InputGroup, Form} from \"react-bootstrap\";\r\n\r\n\r\nconst StatusAdd = (props) => {\r\n\r\n\r\n    return(\r\n        <>\r\n            <Modal size=\"sm\"\r\n                   aria-labelledby=\"contained-modal-title-vcenter\"\r\n                   centered\r\n                   show={props.show}\r\n                   onHide={props.close}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add new Status</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <InputGroup style={{justifyContent : 'center', alignItems : 'center'}}>\r\n                    <Form style={{marginTop : 16}}>\r\n                        <Form.Group>\r\n                            <Form.Control value={props.name} onChange={(e) => props.setName(e.target.value)} type=\"text\" placeholder=\"Status Name\" />\r\n                            <br/>\r\n                            <Form.Control value={props.color} onChange={(e) => props.setColor(e.target.value)} type=\"text\" placeholder=\"Label Color\" />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </InputGroup>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={props.close}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={props.close}>\r\n                        Add\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatusAdd","class Task {\r\n    constructor(name,status, id) {\r\n        this.name = name;\r\n        this.status = status;\r\n        this.id = id;\r\n    }\r\n}\r\n\r\nexport default Task","import React, {useState} from \"react\";\r\nimport Status from \"../components/Status\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport StatusAdd from \"../components/StatusAdd\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport Task from \"../models/task\";\r\nimport {toast} from \"react-toastify\";\r\nimport {v4 as uuidv4} from 'uuid'\r\n\r\nconst Home = (props) => {\r\n\r\n    const {status} = useSelector((state) => ({...state}))\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [statusName, setStatusName] = useState('');\r\n    const [labelColor, setLabelColor] = useState('');\r\n    const [tasks, setTasks] = useState([])\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n        if(statusName && labelColor){\r\n            dispatch({\r\n                type : 'ADD_STATUS',\r\n                payload : {\r\n                    statusName,\r\n                    labelColor,\r\n                    tasks,\r\n                    id : uuidv4()\r\n                }\r\n            })\r\n            //console.log(labelColor, statusName)\r\n            setStatusName('')\r\n            setLabelColor('')\r\n            setShowModal(false)\r\n            if(typeof Window !== undefined) {\r\n                //work to do\r\n                localStorage.setItem('status', JSON.stringify(status))\r\n            }\r\n        }\r\n        else {\r\n            setStatusName('')\r\n            setLabelColor('')\r\n            setShowModal(false)\r\n            toast.info('Uh oh! Status not added')\r\n        }\r\n    }\r\n\r\n    const addStatus = () => {\r\n        setShowModal(true)\r\n        setShowModal((state) => {\r\n            console.log(state)\r\n            return state;\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{justifyContent : 'center', alignItems : 'center', marginTop : 150}}>\r\n                <Button variant={\"info\"} onClick={addStatus} style={{padding : 10, margin : 'auto', display :'block', width : 300, fontWeight : 'bold'}} size={\"lg\"}>\r\n                    ADD STATUS\r\n                </Button>\r\n                <div style={{display : 'flex', flexDirection : 'row', marginTop : 50, justifyContent : status.status.length === 2 ? 'center' : 'space-evenly'}}>\r\n                    {console.log(\"ROOT\", statusName, labelColor)}\r\n                    {status && status.status.map((item, index) => {\r\n                        if(item.statusName === '') return <div> </div>\r\n                        else return <Status status={item.name} color={item.color}/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            {showModal && <StatusAdd show={showModal}\r\n                                     close={handleClose}\r\n                                     name={statusName}\r\n                                     setName={setStatusName}\r\n                                     color={labelColor}\r\n                                     setColor={setLabelColor}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n\r\n}\r\n\r\nexport default Home","import React from \"react\";\r\n\r\nconst Edit = (props) => {\r\n\r\n}\r\n\r\nexport default Edit","import React from \"react\";\nimport './App.css';\nimport Home from \"./Pages/Home\";\nimport Edit from \"./Pages/Edit\";\nimport {ToastContainer} from \"react-toastify\";\nimport {Route, Switch} from \"react-router-dom\";\nimport 'react-toastify/dist/ReactToastify.css'\n\n\nfunction App() {\n  return (\n          <>\n              <ToastContainer/>\n              <Switch>\n                  <Route exact path={\"/\"} component={Home}/>\n                  <Route exact path={\"/edit\"} component={Edit}/>\n              </Switch>\n          </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","class Status {\r\n    constructor(name, color, tasks, id) {\r\n        this.name = name;\r\n        this.color = color;\r\n        this.tasks = tasks;\r\n        this.id = id;\r\n    }\r\n}\r\n\r\nexport default Status","import Status from \"../models/status\";\r\nimport Task from \"../models/task\";\r\n\r\nlet initialState = {\r\n    status :  [{\r\n        statusName: '',\r\n        color : '',\r\n        tasks : [Task],\r\n        id : '',\r\n    }]\r\n}\r\n\r\nexport const statusReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_STATUS' :\r\n            const addedStatus = new Status(action.payload.statusName,\r\n                action.payload.labelColor, action.payload.tasks,\r\n                action.payload.id)\r\n            const updatedStatus = state.status.concat(addedStatus)\r\n            return {\r\n                ...state,\r\n                status: updatedStatus\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}","import Task from \"../models/task\";\r\n\r\nlet initialState = {\r\n    tasks : [{\r\n        tasksName : '',\r\n        status : '',\r\n        taskId : '',\r\n    }]\r\n}\r\n\r\nexport const tasksReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_TASK\" :\r\n            const addedTask = new Task(action.payload.taskName,action.payload.status ,action.payload.id)\r\n            const updatedTasks = state.tasks.concat(addedTask)\r\n            return {\r\n                ...state,\r\n                tasks: updatedTasks\r\n            }\r\n        case \"DELETE_TASK\" :\r\n            var index = state.tasks.findIndex(function (obj){\r\n                return obj.id === action.payload.id\r\n            })\r\n            let updatedTasks2 = state.tasks.filter((item , i) => i !== index)\r\n            return {\r\n                ...state,\r\n                tasks: updatedTasks2\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport {statusReducer} from \"./status\";\r\nimport {tasksReducer} from \"./tasks\";\r\n\r\nconst rootReducer = combineReducers({\r\n    status : statusReducer,\r\n    tasks : tasksReducer,\r\n})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport rootReducer from \"./reducers\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst store = createStore(rootReducer, composeWithDevTools())\n\nReactDOM.render(\n  //<React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n        <App />\n        </BrowserRouter>\n    </Provider>,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}